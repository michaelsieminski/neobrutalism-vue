{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "sidebar",
  "type": "registry:ui",
  "title": "Sidebar",
  "description": "A composable and responsive sidebar component with collapsible behavior.",
  "dependencies": [
    "reka-ui",
    "class-variance-authority",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "utils",
    "sheet"
  ],
  "files": [
    {
      "path": "registry/neobrutalism/ui/sidebar/Sidebar.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SidebarProps } from \".\";\nimport { cn } from \"@/lib/utils\";\nimport { Sheet, SheetContent } from \"@registry/neobrutalism/ui/sheet\";\nimport { SIDEBAR_WIDTH_MOBILE, useSidebar } from \"./utils\";\n\ndefineOptions({\n\tinheritAttrs: false,\n});\n\nconst props = withDefaults(defineProps<SidebarProps>(), {\n\tside: \"left\",\n\tvariant: \"sidebar\",\n\tcollapsible: \"offcanvas\",\n});\n\nconst { isMobile, state, openMobile, setOpenMobile } = useSidebar();\n</script>\n\n<template>\n  <div\n    v-if=\"collapsible === 'none'\"\n    :class=\"\n      cn(\n        'bg-secondary-background text-foreground flex h-full w-[var(--sidebar-width)] flex-col',\n        props.class\n      )\n    \"\n    v-bind=\"$attrs\"\n  >\n    <slot />\n  </div>\n\n  <Sheet\n    v-else-if=\"isMobile\"\n    :open=\"openMobile\"\n    v-bind=\"$attrs\"\n    @update:open=\"setOpenMobile\"\n  >\n    <SheetContent\n      data-sidebar=\"sidebar\"\n      data-mobile=\"true\"\n      :side=\"side\"\n      class=\"bg-secondary-background text-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n      :style=\"{\n        '--sidebar-width': SIDEBAR_WIDTH_MOBILE,\n      }\"\n    >\n      <div class=\"flex h-full w-full flex-col\">\n        <slot />\n      </div>\n    </SheetContent>\n  </Sheet>\n\n  <div\n    v-else\n    class=\"group peer hidden shrink-0 md:block\"\n    :data-state=\"state\"\n    :data-collapsible=\"state === 'collapsed' ? collapsible : ''\"\n    :data-variant=\"variant\"\n    :data-side=\"side\"\n    data-slot=\"sidebar\"\n  >\n    <!-- This is what handles the sidebar gap on desktop  -->\n    <div\n      data-slot=\"sidebar-gap\"\n      :class=\"\n        cn(\n          'duration-200 relative shrink-0 w-[var(--sidebar-width)] bg-transparent transition-[width] ease-linear',\n          'group-data-[collapsible=offcanvas]:w-0',\n          'group-data-[side=right]:rotate-180',\n          variant === 'floating' || variant === 'inset'\n            ? 'group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]'\n            : 'group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]'\n        )\n      \"\n    />\n    <div\n      data-slot=\"sidebar-container\"\n      :class=\"\n        cn(\n          'duration-200 fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] ease-linear md:flex',\n          side === 'left'\n            ? 'left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]'\n            : 'right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]',\n          // Adjust the padding for floating and inset variants.\n          variant === 'floating' || variant === 'inset'\n            ? 'p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+_2px)]'\n            : 'group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r-2 border-r-border group-data-[side=right]:border-l-2 border-l-border',\n          props.class\n        )\n      \"\n      v-bind=\"$attrs\"\n    >\n      <div\n        data-sidebar=\"sidebar\"\n        data-slot=\"sidebar-inner\"\n        class=\"bg-secondary-background flex h-full w-full flex-col\"\n      >\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-sidebar=\"content\"\n    :class=\"\n      cn(\n        'flex min-h-0 flex-1 flex-col overflow-auto group-data-[collapsible=icon]:overflow-hidden',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarFooter.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-sidebar=\"footer\"\n    :class=\"\n      cn('flex flex-col gap-2 p-2 border-t-2 border-t-border', props.class)\n    \"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarGroup.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-sidebar=\"group\"\n    :class=\"\n      cn(\n        'relative flex w-full min-w-0 flex-col p-2 border-b-2 border-b-border last:border-b-0',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarGroupAction.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PrimitiveProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { Primitive } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tPrimitiveProps & {\n\t\tclass?: HTMLAttributes[\"class\"];\n\t}\n>();\n</script>\n\n<template>\n  <Primitive\n    data-sidebar=\"group-action\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :class=\"\n      cn(\n        'absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-base p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\n        'after:absolute after:-inset-2 md:after:hidden',\n        'group-data-[collapsible=icon]:hidden',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </Primitive>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarGroupContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <div data-sidebar=\"group-content\" :class=\"cn('w-full text-sm', props.class)\">\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarGroupLabel.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PrimitiveProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { Primitive } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tPrimitiveProps & {\n\t\tclass?: HTMLAttributes[\"class\"];\n\t}\n>();\n</script>\n\n<template>\n  <Primitive\n    data-sidebar=\"group-label\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :class=\"\n      cn(\n        'text-foreground ring-ring flex h-8 shrink-0 items-center rounded-base px-2 text-sm font-heading outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\n        'group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </Primitive>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarHeader.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-sidebar=\"header\"\n    :class=\"\n      cn('flex flex-col gap-2 p-2 border-b-2 border-b-border', props.class)\n    \"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarInput.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\nimport { Input } from \"@registry/neobrutalism/ui/input\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <Input\n    data-sidebar=\"input\"\n    :class=\"cn('bg-secondary-background h-8 w-full shadow-none', props.class)\"\n  >\n    <slot />\n  </Input>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarInset.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <main\n    data-slot=\"sidebar-inset\"\n    :class=\"\n      cn(\n        'bg-secondary-background relative flex w-full flex-1 flex-col',\n        'md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-base md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </main>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarMenu.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <ul\n    data-sidebar=\"menu\"\n    :class=\"cn('flex w-full min-w-0 flex-col gap-1', props.class)\"\n  >\n    <slot />\n  </ul>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarMenuAction.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PrimitiveProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { Primitive } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = withDefaults(\n\tdefineProps<\n\t\tPrimitiveProps & {\n\t\t\tshowOnHover?: boolean;\n\t\t\tclass?: HTMLAttributes[\"class\"];\n\t\t}\n\t>(),\n\t{\n\t\tas: \"button\",\n\t},\n);\n</script>\n\n<template>\n  <Primitive\n    data-sidebar=\"menu-action\"\n    :class=\"\n      cn(\n        '[&_svg]:text-foreground hover:[&_svg]:text-main-foreground text-main-foreground hover:bg-main hover:outline-border outline-transparent outline-2 absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-base p-0 transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\n        'after:absolute after:-inset-2 md:after:hidden',\n        'peer-data-[size=sm]/menu-button:top-1',\n        'peer-data-[size=default]/menu-button:top-1.5',\n        'peer-data-[size=lg]/menu-button:top-2.5',\n        'group-data-[collapsible=icon]:hidden',\n        showOnHover &&\n          'group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-accent-foreground md:opacity-0',\n        props.class\n      )\n    \"\n    :as=\"as\"\n    :as-child=\"asChild\"\n  >\n    <slot />\n  </Primitive>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarMenuBadge.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <div\n    data-sidebar=\"menu-badge\"\n    :class=\"\n      cn(\n        'text-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-base px-1 text-xs font-base tabular-nums select-none',\n        'peer-hover/menu-button:text-main-foreground',\n        'peer-data-[size=sm]/menu-button:top-1',\n        'peer-data-[size=default]/menu-button:top-1.5',\n        'peer-data-[size=lg]/menu-button:top-2.5',\n        'group-data-[collapsible=icon]:hidden',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </div>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarMenuButton.vue",
      "content": "<script setup lang=\"ts\">\nimport type { Component } from \"vue\";\nimport type { SidebarMenuButtonProps } from \"./SidebarMenuButtonChild.vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipTrigger,\n} from \"@registry/neobrutalism/ui/tooltip\";\nimport SidebarMenuButtonChild from \"./SidebarMenuButtonChild.vue\";\nimport { useSidebar } from \"./utils\";\n\ndefineOptions({\n\tinheritAttrs: false,\n});\n\nconst props = withDefaults(\n\tdefineProps<\n\t\tSidebarMenuButtonProps & {\n\t\t\ttooltip?: string | Component;\n\t\t}\n\t>(),\n\t{\n\t\tas: \"button\",\n\t\tvariant: \"default\",\n\t\tsize: \"default\",\n\t},\n);\n\nconst { isMobile, state } = useSidebar();\n\nconst delegatedProps = reactiveOmit(props, \"tooltip\");\n</script>\n\n<template>\n  <SidebarMenuButtonChild\n    v-if=\"!tooltip\"\n    v-bind=\"{ ...delegatedProps, ...$attrs }\"\n  >\n    <slot />\n  </SidebarMenuButtonChild>\n\n  <Tooltip v-else>\n    <TooltipTrigger as-child>\n      <SidebarMenuButtonChild v-bind=\"{ ...delegatedProps, ...$attrs }\">\n        <slot />\n      </SidebarMenuButtonChild>\n    </TooltipTrigger>\n    <TooltipContent\n      side=\"right\"\n      align=\"center\"\n      :hidden=\"state !== 'collapsed' || isMobile\"\n    >\n      <template v-if=\"typeof tooltip === 'string'\">\n        {{ tooltip }}\n      </template>\n      <component :is=\"tooltip\" v-else />\n    </TooltipContent>\n  </Tooltip>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarMenuItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <li\n    data-sidebar=\"menu-item\"\n    :class=\"cn('group/menu-item relative font-base', props.class)\"\n  >\n    <slot />\n  </li>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarMenuSkeleton.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { computed } from \"vue\";\nimport { cn } from \"@/lib/utils\";\nimport { Skeleton } from \"@registry/neobrutalism/ui/skeleton\";\n\nconst props = defineProps<{\n\tshowIcon?: boolean;\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n\nconst width = computed(() => {\n\treturn `${Math.floor(Math.random() * 40) + 50}%`;\n});\n</script>\n\n<template>\n  <div\n    data-sidebar=\"menu-skeleton\"\n    :class=\"cn('flex h-8 items-center gap-2 rounded-base px-2', props.class)\"\n  >\n    <Skeleton\n      v-if=\"showIcon\"\n      class=\"size-4 rounded-base\"\n      data-sidebar=\"menu-skeleton-icon\"\n    />\n\n    <Skeleton\n      class=\"h-4 flex-1 max-w-[var(--skeleton-width)]\"\n      data-sidebar=\"menu-skeleton-text\"\n      :style=\"{ '--skeleton-width': width }\"\n    />\n  </div>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarMenuSub.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <ul\n    data-sidebar=\"menu-badge\"\n    :class=\"\n      cn(\n        'border-l-foreground/50 mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l-2 px-2.5 py-0.5',\n        'group-data-[collapsible=icon]:hidden',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </ul>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarMenuSubButton.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PrimitiveProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { Primitive } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = withDefaults(\n\tdefineProps<\n\t\tPrimitiveProps & {\n\t\t\tsize?: \"sm\" | \"md\";\n\t\t\tisActive?: boolean;\n\t\t\tclass?: HTMLAttributes[\"class\"];\n\t\t}\n\t>(),\n\t{\n\t\tas: \"a\",\n\t\tsize: \"md\",\n\t},\n);\n</script>\n\n<template>\n  <Primitive\n    data-sidebar=\"menu-sub-button\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-size=\"size\"\n    :data-active=\"isActive\"\n    :class=\"\n      cn(\n        'text-foreground hover:bg-main hover:outline-border hover:text-main-foreground  active:bg-main outline-transparent outline-2 [&>svg]:text-main-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-base px-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0',\n        'data-[active=true]:bg-main data-[active=true]:outline-border',\n        size === 'sm' && 'text-xs',\n        size === 'md' && 'text-sm',\n        'group-data-[collapsible=icon]:hidden',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </Primitive>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarMenuSubItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <li\n    data-slot=\"sidebar-menu-sub-item\"\n    data-sidebar=\"menu-sub-item\"\n    :class=\"cn('group/menu-sub-item relative', props.class)\"\n  >\n    <slot />\n  </li>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarProvider.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes, Ref } from \"vue\";\nimport {\n\tdefaultDocument,\n\tuseEventListener,\n\tuseMediaQuery,\n\tuseVModel,\n} from \"@vueuse/core\";\nimport { TooltipProvider } from \"reka-ui\";\nimport { computed, ref } from \"vue\";\nimport { cn } from \"@/lib/utils\";\nimport {\n\tprovideSidebarContext,\n\tSIDEBAR_COOKIE_MAX_AGE,\n\tSIDEBAR_COOKIE_NAME,\n\tSIDEBAR_KEYBOARD_SHORTCUT,\n\tSIDEBAR_WIDTH,\n\tSIDEBAR_WIDTH_ICON,\n} from \"./utils\";\n\nconst props = withDefaults(\n\tdefineProps<{\n\t\tdefaultOpen?: boolean;\n\t\topen?: boolean;\n\t\tclass?: HTMLAttributes[\"class\"];\n\t}>(),\n\t{\n\t\tdefaultOpen: !defaultDocument?.cookie.includes(\n\t\t\t`${SIDEBAR_COOKIE_NAME}=false`,\n\t\t),\n\t\topen: undefined,\n\t},\n);\n\nconst emits = defineEmits<{\n\t\"update:open\": [open: boolean];\n}>();\n\nconst isMobile = useMediaQuery(\"(max-width: 768px)\");\nconst openMobile = ref(false);\n\nconst open = useVModel(props, \"open\", emits, {\n\tdefaultValue: props.defaultOpen ?? false,\n\tpassive: (props.open === undefined) as false,\n}) as Ref<boolean>;\n\nfunction setOpen(value: boolean) {\n\topen.value = value; // emits('update:open', value)\n\n\t// This sets the cookie to keep the sidebar state.\n\tdocument.cookie = `${SIDEBAR_COOKIE_NAME}=${open.value}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\n}\n\nfunction setOpenMobile(value: boolean) {\n\topenMobile.value = value;\n}\n\n// Helper to toggle the sidebar.\nfunction toggleSidebar() {\n\treturn isMobile.value\n\t\t? setOpenMobile(!openMobile.value)\n\t\t: setOpen(!open.value);\n}\n\nuseEventListener(\"keydown\", (event: KeyboardEvent) => {\n\tif (\n\t\tevent.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n\t\t(event.metaKey || event.ctrlKey)\n\t) {\n\t\tevent.preventDefault();\n\t\ttoggleSidebar();\n\t}\n});\n\n// We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n// This makes it easier to style the sidebar with Tailwind classes.\nconst state = computed(() => (open.value ? \"expanded\" : \"collapsed\"));\n\nprovideSidebarContext({\n\tstate,\n\topen,\n\tsetOpen,\n\tisMobile,\n\topenMobile,\n\tsetOpenMobile,\n\ttoggleSidebar,\n});\n</script>\n\n<template>\n  <TooltipProvider :delay-duration=\"0\">\n    <div\n      :style=\"{\n        '--sidebar-width': SIDEBAR_WIDTH,\n        '--sidebar-width-icon': SIDEBAR_WIDTH_ICON,\n      }\"\n      :class=\"\n        cn(\n          'group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full',\n          props.class\n        )\n      \"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </div>\n  </TooltipProvider>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarRail.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\nimport { useSidebar } from \"./utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n\nconst { toggleSidebar } = useSidebar();\n</script>\n\n<template>\n  <button\n    data-sidebar=\"rail\"\n    aria-label=\"Toggle Sidebar\"\n    :tabindex=\"-1\"\n    title=\"Toggle Sidebar\"\n    :class=\"\n      cn(\n        'absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex',\n        'in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize',\n        '[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize',\n        'hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full',\n        '[[data-side=left][data-collapsible=offcanvas]_&]:-right-2',\n        '[[data-side=right][data-collapsible=offcanvas]_&]:-left-2',\n        props.class\n      )\n    \"\n    @click=\"toggleSidebar\"\n  >\n    <slot />\n  </button>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/SidebarTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { PanelLeft } from \"lucide-vue-next\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@registry/neobrutalism/ui/button\";\nimport { useSidebar } from \"./utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n\nconst { toggleSidebar } = useSidebar();\n</script>\n\n<template>\n  <Button\n    variant=\"noShadow\"\n    data-sidebar=\"trigger\"\n    size=\"icon\"\n    :class=\"cn('h-7 w-7', props.class)\"\n    @click=\"toggleSidebar\"\n  >\n    <PanelLeft />\n    <span class=\"sr-only\">Toggle Sidebar</span>\n  </Button>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/index.ts",
      "content": "import type { VariantProps } from \"class-variance-authority\";\nimport type { HTMLAttributes } from \"vue\";\nimport { cva } from \"class-variance-authority\";\n\nexport interface SidebarProps {\n\tside?: \"left\" | \"right\";\n\tvariant?: \"sidebar\" | \"floating\" | \"inset\";\n\tcollapsible?: \"offcanvas\" | \"icon\" | \"none\";\n\tclass?: HTMLAttributes[\"class\"];\n}\n\nexport { default as Sidebar } from \"./Sidebar.vue\";\nexport { default as SidebarContent } from \"./SidebarContent.vue\";\nexport { default as SidebarFooter } from \"./SidebarFooter.vue\";\nexport { default as SidebarGroup } from \"./SidebarGroup.vue\";\nexport { default as SidebarGroupAction } from \"./SidebarGroupAction.vue\";\nexport { default as SidebarGroupContent } from \"./SidebarGroupContent.vue\";\nexport { default as SidebarGroupLabel } from \"./SidebarGroupLabel.vue\";\nexport { default as SidebarHeader } from \"./SidebarHeader.vue\";\nexport { default as SidebarInput } from \"./SidebarInput.vue\";\nexport { default as SidebarInset } from \"./SidebarInset.vue\";\nexport { default as SidebarMenu } from \"./SidebarMenu.vue\";\nexport { default as SidebarMenuAction } from \"./SidebarMenuAction.vue\";\nexport { default as SidebarMenuBadge } from \"./SidebarMenuBadge.vue\";\nexport { default as SidebarMenuButton } from \"./SidebarMenuButton.vue\";\nexport { default as SidebarMenuItem } from \"./SidebarMenuItem.vue\";\nexport { default as SidebarMenuSkeleton } from \"./SidebarMenuSkeleton.vue\";\nexport { default as SidebarMenuSub } from \"./SidebarMenuSub.vue\";\nexport { default as SidebarMenuSubButton } from \"./SidebarMenuSubButton.vue\";\nexport { default as SidebarMenuSubItem } from \"./SidebarMenuSubItem.vue\";\nexport { default as SidebarProvider } from \"./SidebarProvider.vue\";\nexport { default as SidebarRail } from \"./SidebarRail.vue\";\nexport { default as SidebarTrigger } from \"./SidebarTrigger.vue\";\n\nexport { useSidebar } from \"./utils\";\n\nexport const sidebarMenuButtonVariants = cva(\n\t\"peer/menu-button flex w-full items-center gap-2 overflow-hidden outline-2 outline-transparent rounded-base p-2 text-left text-sm ring-ring transition-[width,height,padding] hover:bg-main hover:text-main-foreground hover:outline-border focus-visible:outline-border focus-visible:text-main-foreground focus-visible:bg-main disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n\t{\n\t\tvariants: {\n\t\t\tsize: {\n\t\t\t\tdefault: \"h-8 text-sm\",\n\t\t\t\tsm: \"h-7 text-xs\",\n\t\t\t\tlg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tsize: \"default\",\n\t\t},\n\t},\n);\n\nexport type SidebarMenuButtonVariants = VariantProps<\n\ttypeof sidebarMenuButtonVariants\n>;\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/sidebar/utils.ts",
      "content": "import type { ComputedRef, Ref } from \"vue\";\nimport { createContext } from \"reka-ui\";\n\nexport const SIDEBAR_COOKIE_NAME = \"sidebar_state\";\nexport const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\nexport const SIDEBAR_WIDTH = \"16rem\";\nexport const SIDEBAR_WIDTH_MOBILE = \"18rem\";\nexport const SIDEBAR_WIDTH_ICON = \"3rem\";\nexport const SIDEBAR_KEYBOARD_SHORTCUT = \"b\";\n\nexport const [useSidebar, provideSidebarContext] = createContext<{\n\tstate: ComputedRef<\"expanded\" | \"collapsed\">;\n\topen: Ref<boolean>;\n\tsetOpen: (value: boolean) => void;\n\tisMobile: Ref<boolean>;\n\topenMobile: Ref<boolean>;\n\tsetOpenMobile: (value: boolean) => void;\n\ttoggleSidebar: () => void;\n}>(\"Sidebar\");\n",
      "type": "registry:component"
    }
  ]
}