{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "accordion",
  "type": "registry:ui",
  "title": "Accordion",
  "description": "A vertically stacked set of interactive headings that each reveal a section of content.",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/neobrutalism/ui/accordion/Accordion.vue",
      "content": "<script setup lang=\"ts\">\nimport type { AccordionRootEmits, AccordionRootProps } from \"reka-ui\";\nimport { AccordionRoot, useForwardPropsEmits } from \"reka-ui\";\n\nconst props = defineProps<AccordionRootProps>();\nconst emits = defineEmits<AccordionRootEmits>();\n\nconst forwarded = useForwardPropsEmits(props, emits);\n</script>\n\n<template>\n  <AccordionRoot v-bind=\"forwarded\">\n    <slot />\n  </AccordionRoot>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/accordion/AccordionContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { AccordionContentProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { AccordionContent } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tAccordionContentProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n</script>\n\n<template>\n  <AccordionContent\n    v-bind=\"delegatedProps\"\n    class=\"overflow-hidden rounded-b-base bg-secondary-background text-sm font-base transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n  >\n    <div :class=\"cn('p-4', props.class)\">\n      <slot />\n    </div>\n  </AccordionContent>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/accordion/AccordionItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { AccordionItemProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { AccordionItem, useForwardProps } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tAccordionItemProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <AccordionItem\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn(\n        'rounded-base overflow-hidden border-2 border-b border-border shadow-shadow',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </AccordionItem>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/accordion/AccordionTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { AccordionTriggerProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { ChevronDown } from \"lucide-vue-next\";\nimport { AccordionHeader, AccordionTrigger } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tAccordionTriggerProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n</script>\n\n<template>\n  <AccordionHeader class=\"flex\">\n    <AccordionTrigger\n      v-bind=\"delegatedProps\"\n      :class=\"\n        cn(\n          'flex flex-1 items-center justify-between text-left text-base text-main-foreground border-border focus-visible:ring-[3px] bg-main p-4 font-heading transition-all [&[data-state=open]>svg]:rotate-180 data-[state=open]:rounded-b-none data-[state=open]:border-b-2 disabled:pointer-events-none disabled:opacity-50',\n          props.class\n        )\n      \"\n    >\n      <slot />\n      <slot name=\"icon\">\n        <ChevronDown\n          class=\"pointer-events-none size-5 shrink-0 transition-transform duration-200\"\n        />\n      </slot>\n    </AccordionTrigger>\n  </AccordionHeader>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/accordion/index.ts",
      "content": "export { default as Accordion } from \"./Accordion.vue\";\nexport { default as AccordionContent } from \"./AccordionContent.vue\";\nexport { default as AccordionItem } from \"./AccordionItem.vue\";\nexport { default as AccordionTrigger } from \"./AccordionTrigger.vue\";\n",
      "type": "registry:component"
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "keyframes": {
            "accordion-down": {
              "from": {
                "height": "0"
              },
              "to": {
                "height": "var(--reka-accordion-content-height)"
              }
            },
            "accordion-up": {
              "from": {
                "height": "var(--reka-accordion-content-height)"
              },
              "to": {
                "height": "0"
              }
            }
          },
          "animation": {
            "accordion-down": "accordion-down 0.2s ease-out",
            "accordion-up": "accordion-up 0.2s ease-out"
          }
        }
      }
    }
  }
}