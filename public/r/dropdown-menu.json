{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "dropdown-menu",
  "type": "registry:ui",
  "title": "Dropdown Menu",
  "description": "A menu component that displays a list of options when triggered.",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenu.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuRootEmits, DropdownMenuRootProps } from \"reka-ui\";\nimport { DropdownMenuRoot, useForwardPropsEmits } from \"reka-ui\";\n\nconst props = defineProps<DropdownMenuRootProps>();\nconst emits = defineEmits<DropdownMenuRootEmits>();\n\nconst forwarded = useForwardPropsEmits(props, emits);\n</script>\n\n<template>\n  <DropdownMenuRoot v-bind=\"forwarded\">\n    <slot />\n  </DropdownMenuRoot>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuCheckboxItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type {\n\tDropdownMenuCheckboxItemEmits,\n\tDropdownMenuCheckboxItemProps,\n} from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { Check } from \"lucide-vue-next\";\nimport {\n\tDropdownMenuCheckboxItem,\n\tDropdownMenuItemIndicator,\n\tuseForwardPropsEmits,\n} from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tDropdownMenuCheckboxItemProps & { class?: HTMLAttributes[\"class\"] }\n>();\nconst emits = defineEmits<DropdownMenuCheckboxItemEmits>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <DropdownMenuCheckboxItem\n    v-bind=\"forwarded\"\n    :class=\"\n      cn(\n        'relative flex cursor-default select-none items-center rounded-base border-2 border-transparent gap-2 py-1.5 pl-8 pr-2 text-sm font-base text-main-foreground outline-hidden transition-colors focus:border-border data-disabled:pointer-events-none data-disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*=size-])]:size-4',\n        props.class\n      )\n    \"\n  >\n    <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n      <DropdownMenuItemIndicator>\n        <Check />\n      </DropdownMenuItemIndicator>\n    </span>\n    <slot />\n  </DropdownMenuCheckboxItem>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type {\n\tDropdownMenuContentEmits,\n\tDropdownMenuContentProps,\n} from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport {\n\tDropdownMenuContent,\n\tDropdownMenuPortal,\n\tuseForwardPropsEmits,\n} from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = withDefaults(\n\tdefineProps<DropdownMenuContentProps & { class?: HTMLAttributes[\"class\"] }>(),\n\t{\n\t\tsideOffset: 4,\n\t},\n);\nconst emits = defineEmits<DropdownMenuContentEmits>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <DropdownMenuPortal>\n    <DropdownMenuContent\n      v-bind=\"forwarded\"\n      :class=\"\n        cn(\n          'z-50 min-w-[8rem] overflow-hidden rounded-base border-2 border-border bg-main p-1 font-base text-main-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-(--radix-dropdown-menu-content-transform-origin)',\n          props.class\n        )\n      \"\n    >\n      <slot />\n    </DropdownMenuContent>\n  </DropdownMenuPortal>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuGroup.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuGroupProps } from \"reka-ui\";\nimport { DropdownMenuGroup } from \"reka-ui\";\n\nconst props = defineProps<DropdownMenuGroupProps>();\n</script>\n\n<template>\n  <DropdownMenuGroup v-bind=\"props\">\n    <slot />\n  </DropdownMenuGroup>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuItemProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { DropdownMenuItem, useForwardProps } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tDropdownMenuItemProps & { class?: HTMLAttributes[\"class\"]; inset?: boolean }\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <DropdownMenuItem\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn(\n        'relative gap-2 [&_svg]:pointer-events-none [&_svg]:w-4 [&_svg]:h-4 [&_svg]:shrink-0 flex cursor-default select-none items-center rounded-base border-2 border-transparent data-[inset=true]:pl-8 bg-main px-2 py-1.5 text-sm font-base outline-hidden transition-colors focus:border-border data-disabled:pointer-events-none data-disabled:opacity-50',\n        inset && 'pl-8',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </DropdownMenuItem>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuLabel.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuLabelProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { DropdownMenuLabel, useForwardProps } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tDropdownMenuLabelProps & { class?: HTMLAttributes[\"class\"]; inset?: boolean }\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <DropdownMenuLabel\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn('px-2 py-1.5 text-sm font-heading', inset && 'pl-8', props.class)\n    \"\n  >\n    <slot />\n  </DropdownMenuLabel>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuRadioGroup.vue",
      "content": "<script setup lang=\"ts\">\nimport type {\n\tDropdownMenuRadioGroupEmits,\n\tDropdownMenuRadioGroupProps,\n} from \"reka-ui\";\nimport { DropdownMenuRadioGroup, useForwardPropsEmits } from \"reka-ui\";\n\nconst props = defineProps<DropdownMenuRadioGroupProps>();\nconst emits = defineEmits<DropdownMenuRadioGroupEmits>();\n\nconst forwarded = useForwardPropsEmits(props, emits);\n</script>\n\n<template>\n  <DropdownMenuRadioGroup v-bind=\"forwarded\">\n    <slot />\n  </DropdownMenuRadioGroup>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuRadioItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type {\n\tDropdownMenuRadioItemEmits,\n\tDropdownMenuRadioItemProps,\n} from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { Circle } from \"lucide-vue-next\";\nimport {\n\tDropdownMenuItemIndicator,\n\tDropdownMenuRadioItem,\n\tuseForwardPropsEmits,\n} from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tDropdownMenuRadioItemProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst emits = defineEmits<DropdownMenuRadioItemEmits>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <DropdownMenuRadioItem\n    v-bind=\"forwarded\"\n    :class=\"\n      cn(\n        'relative flex cursor-default select-none items-center rounded-base border-2 border-transparent gap-2 py-1.5 pl-8 pr-2 text-sm font-base outline-hidden transition-colors focus:border-border data-disabled:pointer-events-none data-disabled:opacity-50',\n        props.class\n      )\n    \"\n  >\n    <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n      <DropdownMenuItemIndicator>\n        <Circle class=\"size-2 fill-current\" />\n      </DropdownMenuItemIndicator>\n    </span>\n    <slot />\n  </DropdownMenuRadioItem>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuSeparator.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuSeparatorProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { DropdownMenuSeparator } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tDropdownMenuSeparatorProps & {\n\t\tclass?: HTMLAttributes[\"class\"];\n\t}\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n</script>\n\n<template>\n  <DropdownMenuSeparator\n    v-bind=\"delegatedProps\"\n    :class=\"cn('-mx-1 my-1 h-0.5 bg-border', props.class)\"\n  />\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuShortcut.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from \"vue\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<{\n\tclass?: HTMLAttributes[\"class\"];\n}>();\n</script>\n\n<template>\n  <span :class=\"cn('ml-auto text-xs font-base tracking-widest', props.class)\">\n    <slot />\n  </span>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuSub.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuSubEmits, DropdownMenuSubProps } from \"reka-ui\";\nimport { DropdownMenuSub, useForwardPropsEmits } from \"reka-ui\";\n\nconst props = defineProps<DropdownMenuSubProps>();\nconst emits = defineEmits<DropdownMenuSubEmits>();\n\nconst forwarded = useForwardPropsEmits(props, emits);\n</script>\n\n<template>\n  <DropdownMenuSub v-bind=\"forwarded\">\n    <slot />\n  </DropdownMenuSub>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuSubContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type {\n\tDropdownMenuSubContentEmits,\n\tDropdownMenuSubContentProps,\n} from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { DropdownMenuSubContent, useForwardPropsEmits } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tDropdownMenuSubContentProps & { class?: HTMLAttributes[\"class\"] }\n>();\nconst emits = defineEmits<DropdownMenuSubContentEmits>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <DropdownMenuSubContent\n    v-bind=\"forwarded\"\n    :class=\"\n      cn(\n        'z-50 min-w-[8rem] overflow-hidden rounded-base border-2 border-border bg-main p-1 font-base text-main-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-(--radix-dropdown-menu-content-transform-origin)',\n        props.class\n      )\n    \"\n  >\n    <slot />\n  </DropdownMenuSubContent>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuSubTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuSubTriggerProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { ChevronRight } from \"lucide-vue-next\";\nimport { DropdownMenuSubTrigger, useForwardProps } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\nconst props = defineProps<\n\tDropdownMenuSubTriggerProps & { class?: HTMLAttributes[\"class\"] }\n>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n\nconst forwardedProps = useForwardProps(delegatedProps);\n</script>\n\n<template>\n  <DropdownMenuSubTrigger\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn(\n        'flex cursor-default select-none items-center rounded-base border-2 border-transparent bg-main px-2 py-1.5 text-sm font-base outline-hidden focus:border-border gap-2 data-[inset=true]:pl-8 [&_svg]:pointer-events-none [&_svg]:w-4 [&_svg]:h-4 [&_svg]:shrink-0',\n        props.class\n      )\n    \"\n  >\n    <slot />\n    <ChevronRight class=\"ml-auto\" />\n  </DropdownMenuSubTrigger>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/DropdownMenuTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuTriggerProps } from \"reka-ui\";\nimport { DropdownMenuTrigger, useForwardProps } from \"reka-ui\";\n\nconst props = defineProps<DropdownMenuTriggerProps>();\n\nconst forwardedProps = useForwardProps(props);\n</script>\n\n<template>\n  <DropdownMenuTrigger v-bind=\"forwardedProps\">\n    <slot />\n  </DropdownMenuTrigger>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/dropdown-menu/index.ts",
      "content": "export { default as DropdownMenu } from \"./DropdownMenu.vue\";\n\nexport { default as DropdownMenuCheckboxItem } from \"./DropdownMenuCheckboxItem.vue\";\nexport { default as DropdownMenuContent } from \"./DropdownMenuContent.vue\";\nexport { default as DropdownMenuGroup } from \"./DropdownMenuGroup.vue\";\nexport { default as DropdownMenuItem } from \"./DropdownMenuItem.vue\";\nexport { default as DropdownMenuLabel } from \"./DropdownMenuLabel.vue\";\nexport { default as DropdownMenuRadioGroup } from \"./DropdownMenuRadioGroup.vue\";\nexport { default as DropdownMenuRadioItem } from \"./DropdownMenuRadioItem.vue\";\nexport { default as DropdownMenuSeparator } from \"./DropdownMenuSeparator.vue\";\nexport { default as DropdownMenuShortcut } from \"./DropdownMenuShortcut.vue\";\nexport { default as DropdownMenuSub } from \"./DropdownMenuSub.vue\";\nexport { default as DropdownMenuSubContent } from \"./DropdownMenuSubContent.vue\";\nexport { default as DropdownMenuSubTrigger } from \"./DropdownMenuSubTrigger.vue\";\nexport { default as DropdownMenuTrigger } from \"./DropdownMenuTrigger.vue\";\nexport { DropdownMenuPortal } from \"reka-ui\";\n",
      "type": "registry:component"
    }
  ]
}