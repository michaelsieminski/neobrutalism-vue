{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "tooltip",
  "type": "registry:ui",
  "title": "Tooltip",
  "description": "A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/neobrutalism/ui/tooltip/Tooltip.vue",
      "content": "<script setup lang=\"ts\">\nimport type { TooltipRootEmits, TooltipRootProps } from \"reka-ui\";\nimport { TooltipRoot, useForwardPropsEmits } from \"reka-ui\";\n\nconst props = defineProps<TooltipRootProps>();\nconst emits = defineEmits<TooltipRootEmits>();\n\nconst forwarded = useForwardPropsEmits(props, emits);\n</script>\n\n<template>\n  <TooltipRoot v-bind=\"forwarded\">\n    <slot />\n  </TooltipRoot>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/tooltip/TooltipContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { TooltipContentEmits, TooltipContentProps } from \"reka-ui\";\nimport type { HTMLAttributes } from \"vue\";\nimport { reactiveOmit } from \"@vueuse/core\";\nimport { TooltipContent, TooltipPortal, useForwardPropsEmits } from \"reka-ui\";\nimport { cn } from \"@/lib/utils\";\n\ndefineOptions({\n\tinheritAttrs: false,\n});\n\nconst props = withDefaults(\n\tdefineProps<TooltipContentProps & { class?: HTMLAttributes[\"class\"] }>(),\n\t{\n\t\tsideOffset: 4,\n\t},\n);\n\nconst emits = defineEmits<TooltipContentEmits>();\n\nconst delegatedProps = reactiveOmit(props, \"class\");\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\n</script>\n\n<template>\n  <TooltipPortal>\n    <TooltipContent\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      :class=\"\n        cn(\n          'z-50 overflow-hidden rounded-base border-2 border-border bg-main px-3 py-1.5 text-sm font-base text-main-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-(--radix-tooltip-content-transform-origin)',\n          props.class\n        )\n      \"\n    >\n      <slot />\n    </TooltipContent>\n  </TooltipPortal>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/tooltip/TooltipProvider.vue",
      "content": "<script setup lang=\"ts\">\nimport type { TooltipProviderProps } from \"reka-ui\";\nimport { TooltipProvider } from \"reka-ui\";\n\nconst props = defineProps<TooltipProviderProps>();\n</script>\n\n<template>\n  <TooltipProvider v-bind=\"props\" :delay-duration=\"0\">\n    <slot />\n  </TooltipProvider>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/tooltip/TooltipTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { TooltipTriggerProps } from \"reka-ui\";\nimport { TooltipTrigger } from \"reka-ui\";\n\nconst props = defineProps<TooltipTriggerProps>();\n</script>\n\n<template>\n  <TooltipTrigger v-bind=\"props\">\n    <slot />\n  </TooltipTrigger>\n</template>\n",
      "type": "registry:component"
    },
    {
      "path": "registry/neobrutalism/ui/tooltip/index.ts",
      "content": "export { default as Tooltip } from \"./Tooltip.vue\";\nexport { default as TooltipContent } from \"./TooltipContent.vue\";\nexport { default as TooltipProvider } from \"./TooltipProvider.vue\";\nexport { default as TooltipTrigger } from \"./TooltipTrigger.vue\";\n",
      "type": "registry:component"
    }
  ]
}